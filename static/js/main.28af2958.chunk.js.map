{"version":3,"sources":["components/common/Paginator/paginator.module.css","components/Users/users.module.css","components/Profile/MyPosts/Post/Post.module.css","components/Profile/ProfileInfo/ProfileInfo.module.css","components/Navbar/Navbar.module.css","reportWebVitals.js","api/api.js","components/redux/auth-reducer.js","components/redux/dialods-reducer.js","components/redux/profile-reducer.js","components/redux/sidebar-reducer.js","components/redux/users-reducer.js","components/redux/app-reducer.js","components/redux/redux-store.js","components/Navbar/Navbar.jsx","hoc/withAuthRedirect.js","components/Dialogs/DialogItem/DialogItem.jsx","components/Dialogs/Messege/Messege.jsx","components/common/FormsControl/FormsControl.js","api/utils/validators/validators.js","components/Dialogs/Dialogs.jsx","components/Dialogs/DialogsContainer.jsx","components/common/Paginator/Paginator.jsx","assets/images/ava.gif","components/Users/User.jsx","components/Users/Users.jsx","assets/images/preloader.svg","components/common/Preloader/preloader.js","components/redux/users-selectors.js","components/Users/UsersContainer.jsx","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/ProfileInfo/ProfileStatus.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx","assets/images/logo.gif","components/Header/Header.jsx","components/Header/HeaderContainer.jsx","components/Login/Login.jsx","App.js","index.js","components/Dialogs/Dialogs.module.css","components/common/FormsControl/FormsControl.module.css","components/Navbar/Friends/Friends.module.css","components/Profile/MyPosts/MyPosts.module.css","components/Header/Header.module.css"],"names":["module","exports","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","instance","axios","create","baseURL","withCredentials","headers","userAPI","currentPage","pageSize","get","response","data","userId","post","delete","console","warn","profileAPI","getProfile","getStatus","updateStatus","status","put","authAPI","email","password","rememberMe","SET_USER_DATA","initialState","login","isAuth","setAuthUserData","type","payload","getAuthUserData","dispatch","a","resultCode","id","authReducer","state","action","ADD_MESSAGE","messages","message","dialogs","name","dialogsReducer","newMessageText","ADD_POST","SET_USER_PROFILE","SET_STATUS","DELETE_POST","posts","likesCount","profile","setStatus","pofileReducer","newPost","newPostText","filter","p","postId","friends","sidebarReducer","FOLLOW","UNFOLLOW","SET_USERS","SET_CURENT_PAGE","SET_TOTAL_USERS_COUNT","TOGLE_IS_FETHING","TOGLE_IS_FOLLOWING_PROGRESS","users","totalUsersCount","isFetching","followingInProgress","followSuccess","unfollowSuccess","togleIsFetching","togleFollowingProgress","usersReducer","map","u","followed","count","INITIALIZED_SUCCESS","initialized","appReducer","reducers","combineReducers","profilePage","dialogsPage","sidebar","usersPage","auth","form","formReducer","app","store","createStore","applyMiddleware","thunkMiddleware","window","Navbar","props","className","s","nav","item","activeClassName","activeLink","to","mapStateToPropsRedirect","DialogItem","dialog","active","dialogImg","src","alt","Messege","FormControl","input","meta","child","hasError","touched","error","styles","formControl","children","Textarea","restProps","Input","required","value","maxLengthCreator","maxLength","length","maxlength50","AddMessageFormRedux","reduxForm","onSubmit","handleSubmit","Field","validate","component","placeholder","Dialogs","dialogsElements","d","messagesElements","m","dialogsItems","e","sendMessage","compose","connect","addMessageActionCreator","Component","RedirectComponent","this","React","Paginator","onPageChanged","pagesCount","Math","ceil","pages","i","push","selectedPage","onClick","User","user","unfollow","follow","photos","small","userFoto","disabled","some","Users","Preloader","style","backgroundColor","preloader","getUsers","createSelector","getPageSize","getTotalUsersCount","getCurrentPage","getIsFetching","getFollowingInProgress","UsersContainer","pageNumber","recuestUsers","page","items","totalCount","Post","massage","maxlength10","MyPosts","memo","postsElements","postsBlock","MyPostsFormRedux","addPost","log","MyPostsContainer","addPostActionCreator","ProfileStatus","useState","editMode","setEditMod","useEffect","onDoubleClick","autoFocus","onBlur","onChange","currentTarget","ProfileInfo","descriptionBlock","large","fullName","aboutMe","Profile","ProfileContainer","match","params","authorizedUserId","history","getUserProfile","withRouter","Header","header","logo","loginBlock","logout","HeaderContainer","LoginReduxForm","formSumaryError","stopSubmit","_error","formData","App","initializeApp","path","render","DialogsContainer","promise","Promise","all","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.28af2958.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"selectedPage\":\"paginator_selectedPage__gbomT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"userFoto\":\"users_userFoto__1Q5_u\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__7ArEN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"descriptionBlock\":\"ProfileInfo_descriptionBlock__2u-_I\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navbar_nav__1mHLE\",\"item\":\"Navbar_item__XvO0f\",\"activeLink\":\"Navbar_activeLink__LCivP\"};","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import axios from \"axios\";\r\n\r\nconst instance = axios.create({\r\n    baseURL: 'https://social-network.samuraijs.com/api/1.0/',\r\n    withCredentials: true,\r\n    headers: {\r\n        \"API-KEY\": \"b9ef1148-56d0-49b1-936f-e5de19905ac8\"\r\n    }\r\n})\r\n\r\nexport const userAPI = {\r\n    getUsers(currentPage, pageSize) {\r\n        return instance.get(`users?page=${currentPage}&count=${pageSize}`)\r\n            .then(response => response.data)\r\n    },\r\n    follow(userId) {\r\n        return instance.post(`follow/${userId}`)\r\n    },\r\n    unfollow(userId) {\r\n        return instance.delete(`follow/${userId}`)\r\n    },\r\n    getProfile(userId) {\r\n        console.warn('Obsolete metod, please profileAPI object')\r\n        return profileAPI.getProfile(userId)\r\n    },\r\n}\r\n\r\nexport const profileAPI = {\r\n    getProfile(userId) {\r\n        return instance.get(`profile/` + userId)\r\n    },\r\n    getStatus(userId) {\r\n        return instance.get(`profile/status/` + userId)\r\n    },\r\n    updateStatus(status) {\r\n        return instance.put(`profile/status`, { status: status })\r\n    },\r\n}\r\n\r\nexport const authAPI = {\r\n    me() {\r\n        return instance.get(`auth/me`)\r\n    },\r\n    login(email, password, rememberMe = false) {\r\n        return instance.post(`auth/login`, { email, password, rememberMe })\r\n    },\r\n    logout(email, password, rememberMe = false) {\r\n        return instance.delete(`auth/login`)\r\n    },\r\n}\r\n\r\n\r\n","import { stopSubmit } from \"redux-form\";\r\nimport { authAPI } from \"../../api/api\";\r\n\r\nconst SET_USER_DATA = 'SET_USER_DATA'\r\n\r\n\r\nlet initialState = {\r\n    userId: null,\r\n    email: null,\r\n    login: null,\r\n    isAuth: false,\r\n}\r\n\r\nconst authReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SET_USER_DATA:\r\n            return {\r\n                ...state,\r\n                ...action.payload,\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\nexport const setAuthUserData = (userId, email, login, isAuth) => ({\r\n    type: SET_USER_DATA, payload:\r\n        { userId, email, login, isAuth }\r\n})\r\nexport const getAuthUserData = () =>\r\n    async (dispatch) => {\r\n        const response = await authAPI.me()\r\n        if (response.data.resultCode === 0) {\r\n            let { id, login, email } = response.data.data;\r\n            dispatch(setAuthUserData(id, email, login, true))\r\n        }\r\n    }\r\nexport const login = (email, password, rememberMe) =>\r\n    async (dispatch) => {\r\n        const response = await authAPI.login(email, password, rememberMe)\r\n        if (response.data.resultCode === 0) { dispatch(getAuthUserData()) }\r\n        else {\r\n            let messages = response.data.messages.length > 0 ? response.data.messages[0] : \"Some error\"\r\n            dispatch(stopSubmit('login', { _error: messages }))\r\n        }\r\n    }\r\nexport const logout = () =>\r\n    async (dispatch) => {\r\n        const response = await authAPI.logout()\r\n        if (response.data.resultCode === 0) { \r\n            dispatch(setAuthUserData(null, null, null, false)) \r\n        }\r\n    }\r\nexport default authReducer","const ADD_MESSAGE = 'ADD-MESSAGE'\r\n\r\nlet initialState = {\r\n  messages: [\r\n    { id: 1, message: 'Hi' },\r\n    { id: 2, message: 'How are you?' },\r\n    { id: 3, message: 'Yo' },\r\n    { id: 4, message: 'Yo' },\r\n    { id: 5, message: 'Yo' },\r\n  ],\r\n  dialogs: [\r\n    { id: 1, name: 'Dima' },\r\n    { id: 2, name: 'Andriy' },\r\n    { id: 3, name: 'Sveta' },\r\n    { id: 4, name: 'Sasha' },\r\n    { id: 5, name: 'Viktor' },\r\n    { id: 6, name: 'Valera' },\r\n  ],\r\n}\r\n\r\nconst dialogsReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case ADD_MESSAGE:\r\n      return {\r\n        ...state,\r\n        // newMessageText: '',\r\n        messages: [...state.messages, { id: 3, message: action.newMessageText, }]\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport const addMessageActionCreator = (newMessageText) => ({ type: ADD_MESSAGE, newMessageText })\r\n\r\nexport default dialogsReducer","import { profileAPI, userAPI } from \"../../api/api\"\r\n\r\nconst ADD_POST = 'ADD-POST'\r\nconst SET_USER_PROFILE = 'SET_USER_PROFILE'\r\nconst SET_STATUS = 'SET_STATUS'\r\nconst DELETE_POST = 'DELETE_POST'\r\n\r\nlet initialState = {\r\n    posts: [\r\n        { id: 1, message: \"Hi how are you?\", likesCount: 12 },\r\n        { id: 2, message: \"It's my first post\", likesCount: 10 },\r\n        { id: 3, message: \"Blabla\", likesCount: 10 },\r\n        { id: 4, message: \"Dada\", likesCount: 10 },\r\n    ],\r\n    profile:\r\n        null,\r\n    status:\r\n        '',\r\n}\r\n\r\nconst pofileReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case ADD_POST: {\r\n            let newPost = {\r\n                id: 6,\r\n                message: action.newPostText,\r\n                likesCount: 0\r\n            }\r\n            return {\r\n                ...state,\r\n                posts: [...state.posts, newPost],\r\n                // newPostText: ''\r\n            }\r\n        }\r\n        case DELETE_POST: {\r\n            return {\r\n                ...state,\r\n                posts: state.posts.filter(p => p.id != action.postId),\r\n            }\r\n        }\r\n        case SET_USER_PROFILE:\r\n            return {\r\n                ...state,\r\n                profile: action.profile\r\n            }\r\n        case SET_STATUS:\r\n            return {\r\n                ...state,\r\n                status: action.status\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\nexport const addPostActionCreator = (newPostText) => ({ type: ADD_POST, newPostText })\r\nexport const deletePost = (postId) => ({ type: DELETE_POST, postId })\r\nexport const setUserProfile = (profile) => ({ type: SET_USER_PROFILE, profile })\r\nexport const setStatus = (status) => ({ type: SET_STATUS, status })\r\n\r\nexport const getUserProfile = (userId) =>\r\n    async (dispatch) => {\r\n        const response = await userAPI.getProfile(userId)\r\n        dispatch(setUserProfile(response.data))\r\n    }\r\nexport const getStatus = (userId) =>\r\n    async (dispatch) => {\r\n        const response = await profileAPI.getStatus(userId)\r\n        dispatch(setStatus(response.data))\r\n    }\r\nexport const updateStatus = (status) =>\r\n    async (dispatch) => {\r\n        const response = await profileAPI.updateStatus(status)\r\n        if (response.data.resultCode === 0) {\r\n            dispatch(setStatus(status))\r\n        }\r\n    }\r\n\r\nexport default pofileReducer","\r\nlet initialState = {\r\n    friends: [\r\n        { id: 1, name: 'Andriy' },\r\n        { id: 2, name: 'Sveta' },\r\n        { id: 3, name: 'Sasha' },\r\n    ],\r\n}\r\nconst sidebarReducer = (state = initialState, action) => {\r\n\r\n\r\n    return state\r\n}\r\nexport default sidebarReducer\r\n","import { userAPI } from \"../../api/api\"\r\n\r\nconst FOLLOW = 'FOLLOW'\r\nconst UNFOLLOW = 'UNFOLLOW'\r\nconst SET_USERS = 'SET_USERS'\r\nconst SET_CURENT_PAGE = 'SET_CURENT_PAGE'\r\nconst SET_TOTAL_USERS_COUNT = 'SET_TOTAL_USERS_COUNT'\r\nconst TOGLE_IS_FETHING = 'TOGLE_IS_FETHING'\r\nconst TOGLE_IS_FOLLOWING_PROGRESS = 'TOGLE_IS_FOLLOWING_PROGRESS'\r\n\r\n\r\nlet initialState = {\r\n    users: [],\r\n    pageSize: 10,\r\n    totalUsersCount: 0,\r\n    currentPage: 1,\r\n    isFetching: true,\r\n    followingInProgress: []\r\n}\r\n\r\nconst usersReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case FOLLOW:\r\n            return {\r\n                ...state,\r\n                users: state.users.map(u => {\r\n                    if (u.id === action.userId) {\r\n                        return { ...u, followed: true }\r\n                    }\r\n                    return u\r\n                })\r\n            }\r\n        case UNFOLLOW:\r\n            return {\r\n                ...state,\r\n                users: state.users.map(u => {\r\n                    if (u.id === action.userId) {\r\n                        return { ...u, followed: false }\r\n                    }\r\n                    return u\r\n                })\r\n            }\r\n        case SET_USERS:\r\n            return {\r\n                ...state,\r\n                // users: [...state.users, ...action.users]\r\n                users: action.users\r\n            }\r\n        case SET_CURENT_PAGE:\r\n            return {\r\n                ...state, currentPage: action.currentPage\r\n            }\r\n        case SET_TOTAL_USERS_COUNT:\r\n            return {\r\n                ...state, totalUsersCount: action.count\r\n            }\r\n        case TOGLE_IS_FETHING:\r\n            return {\r\n                ...state, isFetching: action.isFetching\r\n            }\r\n        case TOGLE_IS_FOLLOWING_PROGRESS:\r\n            return {\r\n                ...state,\r\n                followingInProgress: action.isFetching\r\n                    ? [...state.followingInProgress, action.userId]\r\n                    : state.followingInProgress.filter(id => id != action.userId)\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\nexport const followSuccess = (userId) => ({ type: FOLLOW, userId })\r\nexport const unfollowSuccess = (userId) => ({ type: UNFOLLOW, userId })\r\nexport const setUsers = (users) => ({ type: SET_USERS, users })\r\nexport const setCurrentPage = (currentPage) => ({ type: SET_CURENT_PAGE, currentPage })\r\nexport const setTotalUsersCount = (totalUsersCount) => ({ type: SET_TOTAL_USERS_COUNT, count: totalUsersCount })\r\nexport const togleIsFetching = (isFetching) => ({ type: TOGLE_IS_FETHING, isFetching })\r\nexport const togleFollowingProgress = (isFetching, userId) => ({ type: TOGLE_IS_FOLLOWING_PROGRESS, isFetching, userId })\r\n\r\nexport const recuestUsers = (page, pageSize) => {\r\n    return async (dispatch) => {\r\n        dispatch(togleIsFetching(true))\r\n        dispatch(setCurrentPage(page))\r\n        const data = await userAPI.getUsers(page, pageSize)\r\n        dispatch(togleIsFetching(false))\r\n        dispatch(setUsers(data.items))\r\n        dispatch(setTotalUsersCount(data.totalCount))\r\n    }\r\n}\r\n\r\nexport const follow = (userId) => {\r\n    return async (dispatch) => {\r\n        dispatch(togleFollowingProgress(true, userId))\r\n        const response = await userAPI.follow(userId)\r\n        if (response.data.resultCode == 0) { dispatch(followSuccess(userId)); }\r\n        dispatch(togleFollowingProgress(false, userId))\r\n    }\r\n}\r\n\r\nexport const unfollow = (userId) => {\r\n    return async (dispatch) => {\r\n        dispatch(togleFollowingProgress(true, userId))\r\n        const response = await userAPI.unfollow(userId)\r\n        if (response.data.resultCode == 0) { dispatch(unfollowSuccess(userId)); }\r\n        dispatch(togleFollowingProgress(false, userId))\r\n    }\r\n}\r\nexport default usersReducer","import { getAuthUserData } from \"./auth-reducer\";\r\n\r\nconst INITIALIZED_SUCCESS = 'INITIALIZED_SUCCESS'\r\n\r\nlet initialState = {\r\n    initialized: false,\r\n\r\n}\r\n\r\nconst appReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case INITIALIZED_SUCCESS:\r\n            return {\r\n                ...state,\r\n                initialized: true,\r\n            }\r\n        default: return state;\r\n    }\r\n}\r\nexport const initializedSuccess = () => ({ type: INITIALIZED_SUCCESS, })\r\n\r\nexport const initializeApp = () => (dispatch) => {\r\n    let promise = dispatch(getAuthUserData())\r\n    Promise.all([promise])\r\n        .then(() => {\r\n            dispatch(initializedSuccess())\r\n        })\r\n}\r\nexport default appReducer","import { applyMiddleware, combineReducers, createStore } from \"redux\";\r\nimport authReducer from \"./auth-reducer\";\r\nimport dialogsReducer from \"./dialods-reducer\"\r\nimport pofileReducer from \"./profile-reducer\"\r\nimport sidebarReducer from \"./sidebar-reducer\"\r\nimport usersReducer from \"./users-reducer\";\r\nimport thunkMiddleware from \"redux-thunk\";\r\nimport { reducer as formReducer } from 'redux-form'\r\nimport appReducer from \"./app-reducer\";\r\n\r\nlet reducers = combineReducers({\r\n    profilePage: pofileReducer,\r\n    dialogsPage: dialogsReducer,\r\n    sidebar: sidebarReducer,\r\n    usersPage: usersReducer,\r\n    auth: authReducer,\r\n    form: formReducer,\r\n    app : appReducer,\r\n})\r\n\r\nlet store = createStore(reducers, applyMiddleware(thunkMiddleware));\r\n\r\nwindow.store = store\r\n\r\nexport default store","import { NavLink } from 'react-router-dom';\r\nimport Friends from './Friends/Friends';\r\nimport s from './Navbar.module.css';\r\n\r\n\r\nconst Navbar = (props) => {\r\n    // let friendsElements = props.state.friends.map(e => <Friends friendsName={e.name} friendsId={e.id} />)\r\n    return (\r\n        <nav className={s.nav}>\r\n            <div className={s.item}>\r\n                <NavLink activeClassName={s.activeLink} to='/profile'>Profile</NavLink>\r\n            </div>\r\n            <div className={s.item}>\r\n                <NavLink activeClassName={s.activeLink} to='/dialogs'>Messages</NavLink>\r\n            </div>\r\n            <div className={s.item}>\r\n                <NavLink activeClassName={s.activeLink} to='/users'>Users</NavLink>\r\n            </div>\r\n            <div className={s.item}>\r\n                <NavLink activeClassName={s.activeLink} to='/news'>News</NavLink>\r\n            </div>\r\n            <div className={s.item}>\r\n                <NavLink activeClassName={s.activeLink} to='/music'>Music</NavLink>\r\n            </div>\r\n            <div className={s.item}>\r\n                <NavLink activeClassName={s.activeLink} to='/settings'>Settings</NavLink>\r\n            </div>\r\n            {/* <div>\r\n                <h3>Friends</h3>\r\n                {friendsElements}\r\n            </div> */}\r\n        </nav>\r\n    )\r\n}\r\n\r\nexport default Navbar","import React from 'react'\r\nimport { connect } from 'react-redux';\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nlet mapStateToPropsRedirect = (state) => {\r\n    return {\r\n        isAuth: state.auth.isAuth,\r\n    }\r\n}\r\nexport const withAuthRedirect = (Component) => {\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            if (!this.props.isAuth) return <Redirect to='/login' />\r\n            return <Component {...this.props} />\r\n        }\r\n    }\r\n\r\n    let ConnectedAuthRedirectComponent = connect(mapStateToPropsRedirect)(RedirectComponent);\r\n    \r\n    return ConnectedAuthRedirectComponent\r\n}\r\n","import { NavLink } from 'react-router-dom'\r\nimport s from './../Dialogs.module.css'\r\n\r\nconst DialogItem = (props) => {\r\n    return (\r\n        <div className={s.dialog + ' ' + s.active}>\r\n            <img className={s.dialogImg} src=\"https://hornews.com/images/news_large/c1d4b2b8ec608ea72764c5678816d5c9.jpg\" alt=\"\"/>\r\n            <NavLink to={'/dialogs/' + props.id}>{props.name}</NavLink>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DialogItem","import s from './../Dialogs.module.css'\r\n\r\nconst Messege = (props) => {\r\n    return (\r\n        <div>\r\n            <div className={s.dialog}>{props.message}</div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Messege","import React from 'react';\r\nimport styles from './FormsControl.module.css'\r\n\r\nexport const FormControl = ({ input, meta, child, ...props }) => {\r\n    const hasError = meta.touched && meta.error\r\n    return (\r\n        <div className={styles.formControl + \" \" + (hasError ? styles.error : \"\")}>\r\n            <div>\r\n                {props.children}\r\n            </div>\r\n            {hasError && <span>{meta.error}</span>}\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport const Textarea = (props) => {\r\n    const { input, meta, child, ...restProps } = props\r\n    return <FormControl {...props}><textarea {...input} {...restProps} /></FormControl>\r\n}\r\nexport const Input = (props) => {\r\n    const { input, meta, child, ...restProps } = props\r\n    return <FormControl {...props}><input {...input} {...restProps} /></FormControl>\r\n}","export const required = value => {\r\n    if (value) return undefined\r\n    return 'Field is required'\r\n}\r\nexport const maxLengthCreator = (maxLength) => value => {\r\n    if (value.length > maxLength) return `max length > ${maxLength} sumbols`\r\n    return undefined\r\n}","import DialogItem from './DialogItem/DialogItem';\r\nimport Messege from './Messege/Messege';\r\nimport s from './Dialogs.module.css'\r\nimport React from 'react'\r\nimport { Field, reduxForm } from 'redux-form';\r\nimport { Textarea } from '../common/FormsControl/FormsControl';\r\nimport { maxLengthCreator, required } from '../../api/utils/validators/validators';\r\n\r\n\r\nconst Dialogs = (props) => {\r\n    let state = props.dialogsPage\r\n    let dialogsElements = state.dialogs.map(d => <DialogItem key={d.id} name={d.name} id={d.id} />);\r\n    let messagesElements = state.messages.map(m => <Messege key={m.id} message={m.message} />)\r\n\r\n    let addNewMessage = (e) => {\r\n        props.sendMessage(e.newMessageText);\r\n    }\r\n    return (\r\n        <div className={s.dialogs}>\r\n            <div className={s.dialogsItems}>\r\n                {dialogsElements}\r\n            </div>\r\n            <div className={s.messages}>\r\n                <div>{messagesElements}</div>\r\n                <AddMessageFormRedux onSubmit={addNewMessage} />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst maxlength50 = maxLengthCreator(50)\r\nconst AddMessageForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field validate={[required, maxlength50]} component={Textarea} name='newMessageText' placeholder='enter you message' />\r\n            </div>\r\n            <div><button >addMes</button></div>\r\n        </form>\r\n    )\r\n}\r\nconst AddMessageFormRedux = reduxForm({ form: 'dialogAddMessageForm' })(AddMessageForm)\r\nexport default Dialogs","import React from 'react'\r\nimport { connect } from 'react-redux';\r\nimport { compose } from 'redux';\r\nimport { withAuthRedirect } from '../../hoc/withAuthRedirect';\r\nimport { addMessageActionCreator } from '../redux/dialods-reducer';\r\nimport Dialogs from './Dialogs';\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        dialogsPage: state.dialogsPage,\r\n    }\r\n}\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        sendMessage: (newMessageText) => {\r\n            dispatch(addMessageActionCreator(newMessageText));\r\n        },\r\n\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n    withAuthRedirect,\r\n)(Dialogs)","import React from 'react'\r\nimport styles from \"./paginator.module.css\";\r\n\r\nlet Paginator = ({totalUsersCount, pageSize, currentPage, onPageChanged}) => {\r\n    let pagesCount = Math.ceil(totalUsersCount / pageSize);\r\n    let pages = [];\r\n    for (let i = 1; i <= pagesCount; i++) { pages.push(i) }\r\n\r\n    return <div>\r\n        {pages.map(p => {\r\n            return <span className={currentPage === p && styles.selectedPage}\r\n                onClick={() => { onPageChanged(p) }}>{p}</span>\r\n        })}\r\n    </div>\r\n}\r\n\r\nexport default Paginator","export default __webpack_public_path__ + \"static/media/ava.c4f0f2e0.gif\";","import React from 'react'\r\nimport styles from \"./users.module.css\";\r\nimport userFoto from \"../../assets/images/ava.gif\";\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nlet User = ({ user, followingInProgress, unfollow, follow }) => {\r\n    return <div>\r\n        <span>\r\n            <div>\r\n                <NavLink to={'/profile/' + user.id}>\r\n                    <img src={user.photos.small ? user.photos.small : userFoto} className={styles.userFoto} />\r\n                </NavLink>\r\n            </div>\r\n            <div>\r\n                {user.followed\r\n                    ? <button disabled={followingInProgress.some(id => id === user.id)}\r\n                        onClick={() => { unfollow(user.id) }}>Unollow</button>\r\n                    : <button disabled={followingInProgress.some(id => id === user.id)}\r\n                        onClick={() => { follow(user.id) }}>Follow</button>}\r\n\r\n            </div>\r\n        </span>\r\n        <span>\r\n            <span>\r\n                <div>{user.name}</div>\r\n                <div>{user.status}</div>\r\n            </span>\r\n        </span>\r\n    </div>\r\n}\r\n\r\nexport default User","import React from 'react'\r\nimport Paginator from '../common/Paginator/Paginator';\r\nimport User from './User';\r\n\r\nlet Users = ({ currentPage, onPageChanged, totalUsersCount, pageSize, users, ...props }) => {\r\n    return <div>\r\n        <Paginator currentPage={currentPage}\r\n            onPageChanged={onPageChanged}\r\n            totalUsersCount={totalUsersCount}\r\n            pageSize={pageSize} />\r\n        <div>\r\n            {\r\n                users.map(u =>\r\n                    <User key={u.id}\r\n                        user={u}\r\n                        followingInProgress={props.followingInProgress}\r\n                        unfollow={props.unfollow}\r\n                        follow={props.follow} />\r\n                )\r\n            }\r\n        </div>\r\n    </div>\r\n}\r\nexport default Users","export default __webpack_public_path__ + \"static/media/preloader.413b5564.svg\";","import React from \"react\";\r\nimport preloader from '../../../assets/images/preloader.svg';\r\n\r\nlet Preloader = () => {\r\n    return <div style={{ backgroundColor: 'white' }}>\r\n        <img src={preloader} />\r\n    </div>\r\n}\r\nexport default Preloader","import { createSelector } from \"reselect\"\r\n\r\nconst getUsersSelector = (state) => {\r\n    return state.usersPage.users\r\n}\r\nexport const getUsers = createSelector(getUsersSelector, (users)=>{\r\n    return users.filter(u => true)\r\n})\r\n\r\nexport const getPageSize = (state) => {\r\n    return state.usersPage.pageSize\r\n}\r\nexport const getTotalUsersCount = (state) => {\r\n    return state.usersPage.totalUsersCount\r\n}\r\nexport const getCurrentPage = (state) => {\r\n    return state.usersPage.currentPage\r\n}\r\nexport const getIsFetching = (state) => {\r\n    return state.usersPage.isFetching\r\n}\r\nexport const getFollowingInProgress = (state) => {\r\n    return state.usersPage.followingInProgress\r\n}","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n    follow, unfollow,  recuestUsers, togleFollowingProgress\r\n} from \"../redux/users-reducer\";\r\nimport Users from './Users';\r\nimport Preloader from '../common/Preloader/preloader';\r\nimport { compose } from \"redux\";\r\nimport { getPageSize, getTotalUsersCount, getUsers, getCurrentPage, getIsFetching, getFollowingInProgress } from \"../redux/users-selectors\";\r\n\r\nclass UsersContainer extends React.Component {\r\n    componentDidMount() {\r\n        this.props.recuestUsers(this.props.currentPage, this.props.pageSize)\r\n    }\r\n    onPageChanged = (pageNumber) => {\r\n        this.props.recuestUsers(pageNumber, this.props.pageSize)\r\n        // this.props.setCurrentPage(pageNumber);\r\n    }\r\n    render() {\r\n        return <>\r\n            {this.props.isFetching ? <Preloader /> : null}\r\n            <Users totalUsersCount={this.props.totalUsersCount}\r\n                pageSize={this.props.pageSize}\r\n                currentPage={this.props.currentPage}\r\n                onPageChanged={this.onPageChanged}\r\n                users={this.props.users}\r\n                follow={this.props.follow}\r\n                unfollow={this.props.unfollow}\r\n                followingInProgress={this.props.followingInProgress}\r\n            />\r\n        </>\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        users: getUsers(state),\r\n        pageSize: getPageSize(state),\r\n        totalUsersCount: getTotalUsersCount(state),\r\n        currentPage: getCurrentPage(state),\r\n        isFetching: getIsFetching(state),\r\n        followingInProgress: getFollowingInProgress(state),\r\n    }\r\n}\r\nexport default compose(\r\n    connect(mapStateToProps, { follow, unfollow,  recuestUsers, togleFollowingProgress }),\r\n)(UsersContainer)","import s from './Post.module.css';\r\n\r\nconst Post = (props) => {\r\n  return (\r\n    <div className={s.item}>\r\n      <img src=\"https://hornews.com/images/news_large/c1d4b2b8ec608ea72764c5678816d5c9.jpg\" />\r\n      {props.massage}\r\n      <div>\r\n        <span>like</span> {props.likesCount}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Post","import s from './MyPosts.module.css';\r\nimport Post from './Post/Post';\r\nimport React from 'react';\r\nimport { Field, reduxForm } from 'redux-form'\r\nimport { maxLengthCreator, required } from '../../../api/utils/validators/validators';\r\nimport { Textarea } from '../../common/FormsControl/FormsControl';\r\n\r\nconst maxlength10 = maxLengthCreator(10)\r\n\r\nconst MyPosts =\r\n  React.memo(\r\n    (props) => {\r\n      let postsElements = props.posts.map(p => <Post key={p.id} massage={p.message} likesCount={p.likesCount} />)\r\n\r\n      let onAddPost = (e) => {\r\n        props.addPost(e.newPostText)\r\n        console.log(e.newPostText)\r\n      }\r\n      return (\r\n        <div className={s.postsBlock}>\r\n          <h3>My posts</h3>\r\n          <MyPostsFormRedux onSubmit={onAddPost} />\r\n          <div className={s.posts}>\r\n            {postsElements}\r\n          </div>\r\n        </div>\r\n      )\r\n    }\r\n  )\r\n\r\nconst AddNewPostsForm = (props) => {\r\n  return (\r\n    <form onSubmit={props.handleSubmit}>\r\n      <div><Field placeholder='new post text' name=\"newPostText\" component={Textarea} validate={[required, maxlength10]} /></div>\r\n      <div><button>Add post</button></div>\r\n    </form>\r\n  )\r\n}\r\nconst MyPostsFormRedux = reduxForm({ form: 'ProfileAddNewPostsForm' })(AddNewPostsForm)\r\nexport default MyPosts","import React from 'react';\r\nimport { addPostActionCreator, updateNewPostActionCreator } from '../../redux/profile-reducer';\r\nimport MyPosts from './MyPosts';\r\nimport { connect } from 'react-redux';\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    posts: state.profilePage.posts,\r\n    newPostText: state.profilePage.newPostText,\r\n  }\r\n}\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    addPost: (newPostText) => {\r\n      dispatch(addPostActionCreator(newPostText))\r\n    },\r\n  }\r\n}\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts)\r\n\r\nexport default MyPostsContainer","import React from 'react';\r\n\r\nconst ProfileStatus = (props) => {\r\n    let [editMode, setEditMod] = React.useState(false)\r\n    let [status, setStatus] = React.useState(props.status)\r\n\r\n    React.useEffect(() => { setStatus(props.status) }, [props.status])\r\n\r\n    const activeEditMode = () => { setEditMod(true) }\r\n\r\n    const deactiveEditMode = () => {\r\n        setEditMod(false);\r\n        props.updateStatus(status)\r\n    }\r\n\r\n    const onStatusChange = (e) => { setStatus(e.currentTarget.value) }\r\n    \r\n    return (\r\n        <div>\r\n            {!editMode &&\r\n                <div>\r\n                    <span onDoubleClick={activeEditMode}>status: {props.status}</span>\r\n                </div>\r\n            }\r\n            {editMode &&\r\n                <div>\r\n                    <input autoFocus={true} onBlur={deactiveEditMode}\r\n                        onChange={onStatusChange} value={status} />\r\n                </div>\r\n            }\r\n        </div>\r\n    )\r\n\r\n}\r\nexport default ProfileStatus","import Preloader from '../../common/Preloader/preloader';\r\nimport s from './ProfileInfo.module.css';\r\nimport ProfileStatus from './ProfileStatus';\r\nimport userFoto from \"../../../assets/images/ava.gif\";\r\n\r\nconst ProfileInfo = (props) => {\r\n  if (!props.profile) {\r\n    return <Preloader />\r\n  }\r\n  return (\r\n    <div>\r\n      <div className={s.descriptionBlock}>\r\n        <img src={props.profile.photos.large ? props.profile.photos.large : userFoto} />\r\n        <div>\r\n          <span>fullName : {props.profile.fullName} </span>\r\n        </div>\r\n        {props.profile.aboutMe &&\r\n          <div>\r\n            <span>aboutMe : {props.profile.aboutMe} </span>\r\n          </div>\r\n        }\r\n\r\n        <ProfileStatus status={props.status} updateStatus={props.updateStatus} />\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ProfileInfo","import MyPostsContainer from './MyPosts/MyPostsContainer';\r\nimport ProfileInfo from './ProfileInfo/ProfileInfo';\r\n\r\nconst Profile = (props) => {\r\n  return (\r\n    <div>\r\n      <ProfileInfo profile={props.profile} status={props.status}\r\n         updateStatus={props.updateStatus} />\r\n      <MyPostsContainer />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Profile","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport Profile from './Profile';\r\nimport { getUserProfile, getStatus, updateStatus } from '../redux/profile-reducer';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { compose } from 'redux';\r\n\r\nclass ProfileContainer extends React.Component {\r\n  componentDidMount() {\r\n    let userId = this.props.match.params.userId;\r\n    if (!userId) {\r\n      userId = this.props.authorizedUserId\r\n      if (!userId) {\r\n        this.props.history.push('/login')\r\n      }\r\n    }\r\n    this.props.getUserProfile(userId)\r\n    this.props.getStatus(userId)\r\n  }\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Profile {...this.props} profile={this.props.profile} status={this.props.status}\r\n          updateStatus={this.props.updateStatus} />\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\n  profile: state.profilePage.profile,\r\n  status: state.profilePage.status,\r\n  authorizedUserId: state.auth.userId,\r\n  isAuth: state.auth.isAuth,\r\n})\r\n\r\nexport default compose(\r\n  connect(mapStateToProps, { getUserProfile, getStatus, updateStatus }),\r\n  withRouter)(ProfileContainer)","export default __webpack_public_path__ + \"static/media/logo.141eac0e.gif\";","import { NavLink } from 'react-router-dom'\r\nimport s from './Header.module.css'\r\nimport logo from '../../assets/images/logo.gif';\r\n\r\nconst Header = (props) => {\r\n    return (\r\n        <header className={s.header}>\r\n            <img src={logo}></img>\r\n            <div className={s.loginBlock}>\r\n                {props.isAuth\r\n                    ? <div>{props.login} - <button onClick={props.logout}>Log out</button></div>\r\n                    : <NavLink to={'/login'}>Login</NavLink>}\r\n\r\n            </div>\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default Header","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport Header from './Header'\r\nimport { logout } from './../redux/auth-reducer'\r\n\r\n\r\n\r\nclass HeaderContainer extends React.Component {\r\n    render() {\r\n        return <Header {...this.props} />\r\n    }\r\n}\r\nconst mapStateToProps = (state) => ({\r\n    isAuth: state.auth.isAuth,\r\n    login: state.auth.login,\r\n})\r\nexport default connect(mapStateToProps, { logout })(HeaderContainer)","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { Field, reduxForm } from 'redux-form';\r\nimport { required } from '../../api/utils/validators/validators';\r\nimport { Input } from '../common/FormsControl/FormsControl';\r\nimport { login } from '../redux/auth-reducer';\r\nimport style from '../common/FormsControl/FormsControl.module.css';\r\n\r\nconst LoginForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field name={'email'} placeholder={'Email'} component={Input} type={\"text\"}\r\n                    validate={[required]} />\r\n            </div>\r\n            <div>\r\n                <Field name={'password'} placeholder={'Password'} component={Input} type={\"text\"}\r\n                    validate={[required]} />\r\n            </div>\r\n            <div>\r\n                <Field name={'rememberMe'} component={Input} type={\"checkbox\"} /> remember me\r\n            </div>\r\n            {\r\n                props.error && <div className={style.formSumaryError}>\r\n                    {props.error}\r\n                </div>\r\n            }\r\n            <div>\r\n                <button>Login</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst LoginReduxForm = reduxForm({ form: 'login' })(LoginForm)\r\n\r\nconst Login = (props) => {\r\n    const onSubmit = (formData) => {\r\n        console.log(formData)\r\n        props.login(formData.email, formData.password, formData.rememberMe)\r\n    }\r\n    if (props.isAuth) {\r\n        return <Redirect to={\"/profile\"} />\r\n    }\r\n    return <div>\r\n        <h1>Login</h1>\r\n        <LoginReduxForm onSubmit={onSubmit} />\r\n    </div>\r\n}\r\nconst mapStateToProps = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n})\r\nexport default connect(mapStateToProps, { login })(Login)","import './App.css';\nimport Navbar from './components/Navbar/Navbar';\nimport { Route, withRouter } from 'react-router-dom';\nimport DialogsContainer from './components/Dialogs/DialogsContainer';\nimport UsersContainer from './components/Users/UsersContainer';\nimport ProfileContainer from './components/Profile/ProfileContainer';\nimport HeaderContainer from './components/Header/HeaderContainer';\nimport LoginPage from './components/Login/Login';\nimport React from 'react';\nimport { initializeApp } from './components/redux/app-reducer'\nimport { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport Preloader from './components/common/Preloader/preloader';\n\nclass App extends React.Component {\n\n  componentDidMount() {\n    this.props.initializeApp()\n  }\n\n  render() {\n    if (!this.props.initialized) {\n      return <Preloader />\n    }\n\n    return (\n      <div className='app-wrapper'>\n        <HeaderContainer />\n        <Navbar />\n        <div className='aap-wrapper-content'>\n          <Route path='/dialogs'\n            render={() => <DialogsContainer />} />\n          <Route path='/profile/:userId?'\n            render={() => <ProfileContainer />} />\n          <Route path='/users'\n            render={() => <UsersContainer />} />\n          <Route path='/login'\n            render={() => <LoginPage />} />\n        </div>\n      </div>\n    );\n  }\n\n}\n\nconst mapStateToProps = (state) => ({\n  initialized: state.app.initialized\n})\n\nexport default compose(\n  withRouter,\n  connect(mapStateToProps, { initializeApp })\n)(App)","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\nimport store from './components/redux/redux-store';\nimport App from './App';\nimport { Provider } from 'react-redux';\nimport { BrowserRouter } from 'react-router-dom';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <BrowserRouter>\n        <App />\n      </BrowserRouter>\n\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__3OmoS\",\"dialogsItems\":\"Dialogs_dialogsItems__UjJZb\",\"dialogImg\":\"Dialogs_dialogImg__3fePW\",\"dialog\":\"Dialogs_dialog__2ltG_\",\"active\":\"Dialogs_active___cJ8h\",\"messages\":\"Dialogs_messages__2mkon\",\"message\":\"Dialogs_message__YKfh1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormsControl_formControl__312TZ\",\"error\":\"FormsControl_error__BRWnQ\",\"formSumaryError\":\"FormsControl_formSumaryError__xuS7l\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"fAva\":\"Friends_fAva__10WPn\",\"item\":\"Friends_item__1FsFd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postsBlock\":\"MyPosts_postsBlock__1w3zc\",\"posts\":\"MyPosts_posts__XsRQL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__2PC2P\",\"loginBlock\":\"Header_loginBlock__2xjwl\"};"],"sourceRoot":""}